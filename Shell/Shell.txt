tar zxvf xxx.tar.gz -C /soft/ -C指定解压目录

yum install --installroot=/soft/ nc # 可能已经安装了 那么执行下面的命令就可以了
nc -lk 8888 输入字符串 执行Spark Streaming

yum install --installroot=/usr/src/ 

yum -y list java* 
273878
netstat -at 
netstat -an|grep 2181
netstat -at|grep 2181
netstat -nat #查看端口信息

cut [选项] 文件名
-f 列号：提取第几列（以1开始）
-d 分隔符：按照指定分隔符分割列（默认为制表符）
cut -f 2,4 s.txt  截取第二列和第四列

df [-h]查看分区情况
---------------------
printf '输出类型输出格式' 输出内容 单引号不能省略

chown -R root.root /home/hadoop
输出类型
%ns 输出字符串 n是数字指代输出几个字符
%ni 输出整数 n 输出几个数字
%m.nf 输出浮点数 %8.2f 表示 输出8位数 2位小数 6位整数。

输出格式
\a 输出警告声音
\b 退格键 backspace
\f 清除屏幕
\n 换行
\r 回车 enter
\t 水平输出退格键 tab
\v 垂直输出退格键 tab

echo 实现由printf

printf '%s\t%s\t%s\n' 1 2 3 4 5 6
1	2	3
4	5	6
 
 printf '%s' | $(cat s.txt)

 awk 中输出只支持print 和printf
 print 会在每个输出之后自动加入一个换行符 （不是linux的命令）
 --------------------------------------
 awk '条件1{动作1}条件2{动作2}...' 文件名

 awk '{print $2 "\t" $4 "\n"}' x.txt
 -------------------------------------
 sed 字符替换命令

 sed [选项] '[动作]' 文件名

 选项
 -n 一般sed 命令会把所有数据都输出到屏幕，此选项只会把进过sed命令处理的行输出到屏幕
 -e 允许对输入数据应用多条sed命令编辑
 -i 用sed的修改结果直接修改读取数据的文件，而不是输出到屏幕

 a 追加 在当前行后添加一行或多行。
 c 行替换 用c 后面的字符串替换原数据行
 i 插入 在当前行前插入一行或多行 
 d 删除，删除指定的行
 p 打印 输出指定的行
 s 字符替换 格式为 "行范围s/旧字符/新字符/g"

sed -n '2p' s.txt
sed '2,4d' s.txt 删除2~4行
sed '2a caonimei' x.txt 在文件第二行后插入字符串'caonimei'

sed '4s/70/100/g' 把第4行的70替换为100 g表示 有多个时全部替换

sed -e 's/furong//g';'s/fenj//g' a.txt 
------------------------------
sort [选项] 文件名
选项
-f 忽略大小写
-n 以数值型排序，默认字符串排序
-r 从大到小排序 默认从小到大
-t 指定分隔符 默认分隔符是制表符
-k n[,m] 指定字段范围排序 从n 到 m （默认到行尾）

sort /etc/password
sort -n -t ":" -k 3,3 /etc/password
-------------------------
wc [选项] 文件名
-l 只统计行数
-w 只统计单词数
-m 只统计字符数
---------------------------------------
[] 或者 test
[ -e /root/install.log ] && echo yes || echo no 
ln /root/student.txt /tmp/stu 创建硬链接 
-z 判断为空  （空的话为真）
-n 判断不为空
-a 与 判断一 -a 判断二
-o 或
chmod 755 xx.sh

$()与`` 
$var 与${}

${ }的一些特异功能
定义一个变量：
file=/dir1/dir2/dir3/my.file.txt
可以用${ }分别替换获得不同的值：
${file#*/} 拿掉第一个 / 及其左边的字符串：dir1/dir2/dir3/my.file.txt
${file##*/} 拿掉最后一个 / 及其左边的字符串：my.file.txt
${file#*.} 拿掉第一个 . 及其左边的字符串：file.txt
${file##*.} 拿掉最后一个 . 及其左边的字符串：txt
${file%/*} 拿掉最后一个 / 及其右边的字符串：/dir1/dir2/dir3
${file%%/*} 拿掉第一个 / 及其右边的字符串：(空值)
${file%.*} 拿掉最后一个 . 及其右边的字符串：/dir1/dir2/dir3/my.file
${file%%.*} 拿掉第一个 . 及其右边的字符串：/dir1/dir2/dir3/my
记忆的方法：
# 去掉左边(键盘上 # 在 $ 的左边)
% 去掉右边(在键盘上 % 在 $ 的右边)
单一符号是最小匹配，两个符号是最大匹配。
${file:0:5} 提取最左边的 5 个字节：/dir1
${file:5:5} 提取第 5 个字节右边的连续 5 个字节：/dir2

read -t 30 -p "please input a dir :" dir

=SUBSTITUTE(SUBSTITUTE(A2,"",""),"","")

ls *.tar.gz > ls.log
for i in $( cat ls.log)
do
  tar -zxf $i &> /dev/null
done
rm -rf ls.log

s=0
for((i=1;i<=100;i=i+1))
do
  s=$(( $s + $i ))
done
echo $s




变量=值
格式不能有空格
set 查看系统下定义的环境变量
-u 设置 调用变量时如果没有定义的时候 给出提示

环境变量
export
bash
pstree
set 查看所有变量
env 查看环境变量
exit 
unset
提倡 环境变量全部大写
PATH 系统搜索命令的路径
增加path PATH="$PATH":/root/sh
echo $PS1 定义当前操作系统的提示符

\  PS2 

locale -a 
echo $LANG
cat /etc/sysconfig/i18n

find / -name hello.sh & 查询命令后台执行





















