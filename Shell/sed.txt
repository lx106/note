#打印除test文件1~3行
sed '1,3d' test  

#打印test文件包含指定的行到屏幕
sed -n '/north/p' test
sed -n '/[Nn][Oo] /p' test 

#删除包含及删除不包含north的行
sed '/north/d' test
sed '/north/!d' test


--------------sed 命令参数 ---------------
命令 ------- 功能
a\	 在当前行后面加入一行或者文本
b label  分支到脚本中带有标号的地方，如果标号不存在就分支到脚本的末尾
c\	 用新的文本改变或者替代本行的文本
d	 从模板块（Pattern space）位置删除行
D	 删除模板块的第一行
i\  在当前行上面插入文本
h  拷贝模板块的内容到内存中的缓冲区
H  追加模板块的内容到内存中的缓冲区
g  获得内存缓冲区的内容，并替代当前模板块中的文本
G  获得内存缓冲区的内容，并追加到当前模板块文本的后面
l  列表不能打印字符的清单
n  读取下一个输入行，用下一个命令处理新的行而不是用第一个命令
N  追加下一个输入行到模板块后面并在二者之间嵌入一个新的行， 改变当前行的号码
p  打印模板块的行
P  打印模板块的第一行
q  退出 sed
r file  从 file 中读行
t label
if 分支，从最后一行开始，条件一旦被满足或者 T 命令或者 t 命令，将导致分支到
带有标号的命令处，或者到脚本的末尾
T label
错误分支，从最后一行开始，一旦发生错误或者 T 命令或者 t 命令，将导致分支到
带有标号的命令处，或者到脚本的末尾

命令  功能
w file  写并追模板块到 file 末尾
W file  写并追模板块的第一行到 file 末尾
!  表示后面的命令对所有没有被选定的行发生作用
s/re/string/  用 string 替换正则表达式 re
=  打印当前行号码
#command  把注释扩展到下一个换行符以前
替换标记
g	行内全面替换
p	打印行
w	把行写入一个文件
x       互换模板块中的文本和缓冲区中的文本
y	把一个字符翻译为另外的字符（但是不能用于正则表达式）
选项  功能
-e command  允许多点编辑
--expression=command  同上
-h,--help  打印命令行选项摘要，并显示 bug 列表的地址
-n,--quiet,--silent  取消默认输出
-f,  引导 sed 脚本文件名
--filr=script-file  同上
-V,--version  打印版本和版权信息
-----------------------------------------
表 4.3 sed 正则表达式元字符集
元字符  功能  例子  匹配什么
^  锚定行的开始  /^love/  匹配所有以 love 开头的行
$  锚定行的结束  /love$/  匹配所有以 love 结束的行
.
匹配一个非换行符的字符
/l..e/
匹配所有包含 l 紧随两个任意字符，然
后是 e 的行
*
匹配零或多个字符
/*love/
匹配所有模板是一个或多个空格后紧
跟 love 的行
[ ]  匹配一个指定范围内的字符  /[Ll]ove/  匹配包含 Love 或 love 的行
[^]  匹配一个不在指定范围内的
字符
/[^A-KM-Z]ove/  匹配包含模板以 A～K或 M～Z 的一个
字母开头，紧跟 ove 的行
\(..\)
保存匹配的字符
s/\(love\)able/\1rs/  标签标记出来的部分被保存在1号标签
中，为了方便在后面引用，使用\|来表
示，\|将被标签标记出来的模板替换，
从表达式的最左边开始，向右最多可以
使用 9 个标签。例如，love 被保存在寄
存器 1 当中，并稍后用做字符串替换。
loveable 就被替换为 lovers 
&
保存搜索字符用来替换其他
字符
s/love/**&**/
&表示搜索字符串，所以 love 就变为
**love**
\<
锚定单词的开始
/\<love/
匹配包含以 love 开头的单词的行
\>
锚定单词的结束
/love\>/
匹配包含以 love 结尾的单词的行
x\{m\}
x\{m,\}
x\{m,n\} a
重复字符 X，M 次
重复字符 X，至少 M次
重复字符 X，至少 M 次，不
多于 N 次